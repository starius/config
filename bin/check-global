#!/bin/bash

# Optional arguments:
# 1. file with declarations (=globa.hpp)
# 2. header files with definitions (= all hpp files recursively)
# 3. whether to select only documented definitions (preceded by */)
#    (if specified, means True)

global_classes=`mktemp`
all_classes=`mktemp`

global_hpp=$1
if [[ $global_hpp == "" ]] ; then
    global_hpp=global.hpp
fi

all_files=$2
if [[ $all_files == "" ]] ; then
    all_files=`find -iname '*.hpp'`
fi

mygrep='egrep --ignore-case --no-filename --only-matching'
declaration='(template.*<.+>.*)?(class|struct)'

tmp1=`mktemp`
if [[ $3 == "" ]] ; then
    cat $all_files > $tmp1
else
    grep --no-filename -A 1 "\*\/" $all_files > $tmp1
fi

$mygrep "^$declaration [^;]+$" $tmp1 | \
    sed -e 's@ \?[:{].*@@' -e 's@.* @@' > $all_classes

$mygrep "$declaration \w+;" $global_hpp | \
    sed 's@.*\(class\|struct\) \(\w\+\);@\2@' > $global_classes

grep -vF -f $global_classes $all_classes | sort | uniq

rm $global_classes $all_classes

