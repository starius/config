#!/bin/bash

set -xue

PB_ROOT="${HOME}/.protobuf-root"
PB_SRC="${HOME}/src/github.com/google/protobuf"
LUA_PB="${HOME}/src/github.com/indygreg/lua-protobuf"

# protobuf itself
if [ ! -d "$PB_SRC" ]; then
    mkdir -p "$PB_SRC"
    git clone https://github.com/google/protobuf "$PB_SRC"
fi
cd "$PB_SRC"
./autogen.sh
./configure --prefix "$PB_ROOT"
make -j 4
make install

# Go (needs ./install-go)
go get \
    google.golang.org/grpc \
    github.com/golang/protobuf/{proto,protoc-gen-go}

# Python
cd "${PB_SRC}/python"
python setup.py install --user

# Lua
if [ ! -d "$LUA_PB" ]; then
    mkdir -p "$LUA_PB"
    git clone https://github.com/indygreg/lua-protobuf "$LUA_PB"
fi
cd "$LUA_PB"
python setup.py install --user
# https://github.com/indygreg/lua-protobuf#missing-plugin_pb2-python-module
# Put this file to ~/.local/bin/plugin_pb2.py
T=$(mktemp -d)
protoc \
    -I"${PB_SRC}/src" \
    --python_out "$T" \
    "${PB_SRC}/src/google/protobuf/compiler/plugin.proto"
cp "${T}/google/protobuf/compiler/plugin_pb2.py" "$HOME/.local/bin"
rm -r "$T"
sed -i 's/google.protobuf.compiler.plugin_pb2/plugin_pb2/' \
    $(grep -l google.protobuf.compiler.plugin_pb2 -r $HOME/.local/lib)
# Test
HELLOWORLD_OUT=$(mktemp -d)
mkdir -p "$HELLOWORLD_OUT"
HELLOWORLD="${GOPATH}/src/google.golang.org/grpc/examples/helloworld/helloworld"
protoc \
    -I "$HELLOWORLD" \
    --lua_out "$HELLOWORLD_OUT" \
    "${HELLOWORLD}/helloworld.proto"
rm -r "$HELLOWORLD_OUT"
